import{_ as d,c,a as o,b as s,d as r,w as e,e as a,r as t,o as u}from"./app-aGPqDNsI.js";const k={};function m(h,n){const p=t("code-block"),i=t("code-group"),l=t("RouteLink");return u(),c("div",null,[n[5]||(n[5]=o('<h1 id="welcome-to-dokdo-documentation" tabindex="-1"><a class="header-anchor" href="#welcome-to-dokdo-documentation"><span>Welcome to Dokdo Documentation</span></a></h1><p>This is the official documentation for Dokdo, an easy-to-use Discord bot debugging tool.</p><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started"><span>Getting Started</span></a></h2><h3 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h3><p>You could install <code>dokdo</code> by this command:</p>',5)),s(i,null,{default:e(()=>[s(p,{title:"YARN"},{default:e(()=>n[0]||(n[0]=[a(" ```bash yarn add dokdo ``` ")])),_:1}),s(p,{title:"NPM"},{default:e(()=>n[1]||(n[1]=[a(" ```bash npm i dokdo ``` ")])),_:1})]),_:1}),n[6]||(n[6]=o(`<h3 id="adding-dokdo-to-project" tabindex="-1"><a class="header-anchor" href="#adding-dokdo-to-project"><span>Adding Dokdo to Project</span></a></h3><p>Just add a few lines of code.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> Dokdo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dokdo&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> DokdoHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dokdo</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;!&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)),r("p",null,[n[3]||(n[3]=a("You could check Dokdo class options ")),s(l,{to:"/docs/types.html#dokdooptions"},{default:e(()=>n[2]||(n[2]=[a("here")])),_:1}),n[4]||(n[4]=a("."))]),n[7]||(n[7]=o(`<p>At Message Handler:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">client<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">await</span> DokdoHandler<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="line">  <span class="token comment">// your command code</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h2><p>You could check some examples <a href="examples">here</a></p><h2 id="contributing" tabindex="-1"><a class="header-anchor" href="#contributing"><span>Contributing</span></a></h2><p>Contributing is always welcomed!</p><p><a href="https://github.com/wonderlandpark/dokdo" target="_blank" rel="noopener noreferrer">Github</a></p>`,7))])}const b=d(k,[["render",m]]),f=JSON.parse('{"path":"/docs/","title":"Dokdo Documentation","lang":"en-US","frontmatter":{"lang":"en-US","title":"Dokdo Documentation","description":"Easy Discord bot debugging tool."},"git":{"updatedTime":1744730135000,"contributors":[{"name":"wonderlandpark","username":"wonderlandpark","email":"wonderlandpark@outlook.kr","commits":1,"url":"https://github.com/wonderlandpark"}],"changelog":[{"hash":"4b1b8ba3d12501f4a7b77dac4bc177b4dc1e2833","time":1744730135000,"email":"wonderlandpark@outlook.kr","author":"wonderlandpark","message":"chore: migration via copliot"}]},"filePathRelative":"docs/index.md"}');export{b as comp,f as data};
