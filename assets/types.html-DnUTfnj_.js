import{_ as e,c as p,a,d as n,b as t,e as o,r as d,o as r}from"./app-aGPqDNsI.js";const u={};function i(k,l){const s=d("Docs");return r(),p("div",null,[l[46]||(l[46]=a(`<h1 id="types" tabindex="-1"><a class="header-anchor" href="#types"><span>Types</span></a></h1><p>This page contains type definitions and options for Dokdo.</p><h2 id="dokdo" tabindex="-1"><a class="header-anchor" href="#dokdo"><span>Dokdo</span></a></h2><p>The main class of Dokdo.</p><p>You could access by <code>parent</code> variable in js(eval) command.</p><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">Dokdo</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> options<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,7)),n("blockquote",null,[n("table",null,[l[8]||(l[8]=n("thead",null,[n("tr",null,[n("th",null,"PARAMETER"),n("th",null,"TYPE"),n("th",null,"OPTIONAL"),n("th",null,"DEFAULT"),n("th",null,"DESCRIPTION")])],-1)),n("tbody",null,[n("tr",null,[l[0]||(l[0]=n("td",null,"client",-1)),n("td",null,[t(s,{type:"Client",link:"https://discord.js.org/#/docs/main/stable/class/Client"})]),l[1]||(l[1]=n("td",null,null,-1)),l[2]||(l[2]=n("td",null,[n("em",null,"none")],-1)),l[3]||(l[3]=n("td",null,"DJS bot client",-1))]),n("tr",null,[l[4]||(l[4]=n("td",null,"options",-1)),n("td",null,[t(s,{type:"DokdoOptions",link:"#dokdooptions"})]),l[5]||(l[5]=n("td",null,null,-1)),l[6]||(l[6]=n("td",null,[n("em",null,"none")],-1)),l[7]||(l[7]=n("td",null,"Options of Dokdo",-1))])])])]),l[47]||(l[47]=n("h3",{id:"properties",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#properties"},[n("span",null,"Properties")])],-1)),l[48]||(l[48]=n("h4",{id:"client",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#client"},[n("span",null,".client")])],-1)),l[49]||(l[49]=n("p",null,"DJS bot client",-1)),n("blockquote",null,[n("p",null,[l[9]||(l[9]=o("Type: ")),t(s,{type:"Client",link:"https://discord.js.org/#/docs/main/stable/class/Client"})])]),l[50]||(l[50]=n("h4",{id:"options",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#options"},[n("span",null,".options")])],-1)),l[51]||(l[51]=n("p",null,"Options of Dokdo",-1)),n("blockquote",null,[n("p",null,[l[10]||(l[10]=o("Type: ")),t(s,{type:"DokdoOptions",link:"#dokdooptions"})])]),l[52]||(l[52]=n("h4",{id:"owners",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#owners"},[n("span",null,".owners")])],-1)),l[53]||(l[53]=n("p",null,[o("User ID to allow to use "),n("code",null,"dokdo")],-1)),n("blockquote",null,[n("p",null,[l[11]||(l[11]=o("Type: ")),t(s,{type:"String"}),l[12]||(l[12]=o("[]"))])]),l[54]||(l[54]=n("h3",{id:"methods",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#methods"},[n("span",null,"Methods")])],-1)),l[55]||(l[55]=n("h4",{id:"run-message",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#run-message"},[n("span",null,[o(".run("),n("code",null,"message"),o(")")])])],-1)),l[56]||(l[56]=n("p",null,"Runs dokdo command",-1)),n("blockquote",null,[n("table",null,[l[15]||(l[15]=n("thead",null,[n("tr",null,[n("th",null,"PARAMETER"),n("th",null,"TYPE"),n("th",null,"DESCRIPTION")])],-1)),n("tbody",null,[n("tr",null,[l[13]||(l[13]=n("td",null,"message",-1)),n("td",null,[t(s,{type:"Message",link:"https://discord.js.org/#/docs/main/stable/class/Client"})]),l[14]||(l[14]=n("td",null,"Message on Discord",-1))])])]),n("p",null,[l[16]||(l[16]=o("Returns: ")),t(s,{type:"void",link:"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined"})])]),l[57]||(l[57]=a(`<h2 id="dokdooptions" tabindex="-1"><a class="header-anchor" href="#dokdooptions"><span>DokdoOptions</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">interface</span> <span class="token class-name">DokdoOptions</span> <span class="token punctuation">{</span></span>
<span class="line">  prefix<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  noPerm<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>message<span class="token operator">:</span> Message<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span></span>
<span class="line">  secrets<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  aliases<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">  globalVariable<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="types-1" tabindex="-1"><a class="header-anchor" href="#types-1"><span>Types</span></a></h3>`,3)),n("ul",null,[n("li",null,[t(s,{type:"Object"})])]),l[58]||(l[58]=n("h3",{id:"properties-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#properties-1"},[n("span",null,"Properties")])],-1)),n("blockquote",null,[n("table",null,[l[45]||(l[45]=n("thead",null,[n("tr",null,[n("th",null,"PARAMETER"),n("th",null,"TYPE"),n("th",null,"OPTIONAL"),n("th",null,"DEFAULT"),n("th",null,"DESCRIPTION"),n("th",null,"EXAMPLE")])],-1)),n("tbody",null,[n("tr",null,[l[17]||(l[17]=n("td",null,"prefix",-1)),n("td",null,[t(s,{type:"String"})]),l[18]||(l[18]=n("td",null,null,-1)),l[19]||(l[19]=n("td",null,[n("em",null,"none")],-1)),l[20]||(l[20]=n("td",null,"Prefix of Bot",-1)),l[21]||(l[21]=n("td",null,[n("code",null,"'!'")],-1))]),n("tr",null,[l[23]||(l[23]=n("td",null,"aliases",-1)),n("td",null,[t(s,{type:"String"}),l[22]||(l[22]=o("[]"))]),l[24]||(l[24]=n("td",null,"✅",-1)),l[25]||(l[25]=n("td",null,[n("code",null,"['dokdo', 'dok']")],-1)),l[26]||(l[26]=n("td",null,[n("code",null,"dokdo"),o(" command aliases")],-1)),l[27]||(l[27]=n("td",null,[n("code",null,"['debug']")],-1))]),n("tr",null,[l[29]||(l[29]=n("td",null,"owners",-1)),n("td",null,[t(s,{type:"String"}),l[28]||(l[28]=o("[]"))]),l[30]||(l[30]=n("td",null,"✅",-1)),l[31]||(l[31]=n("td",null,"Fetch Application Owner(s) from Discord API",-1)),l[32]||(l[32]=n("td",null,[o("User ID to allow to use "),n("code",null,"dokdo")],-1)),l[33]||(l[33]=n("td",null,[n("code",null,"['285185716240252929']")],-1))]),l[44]||(l[44]=n("tr",null,[n("td",null,"secrets"),n("td",null,"any[]"),n("td",null,"✅"),n("td",null,[n("code",null,"[]")]),n("td",null,"Secrets to hide at output"),n("td",null,[n("code",null,"['superSecretPassword', 'youshallnotpass']")])],-1)),n("tr",null,[l[34]||(l[34]=n("td",null,"globalVariable",-1)),n("td",null,[t(s,{type:"Object"})]),l[35]||(l[35]=n("td",null,"✅",-1)),l[36]||(l[36]=n("td",null,[n("code",null,"{}")],-1)),l[37]||(l[37]=n("td",null,"Custom global variable to use at eval",-1)),l[38]||(l[38]=n("td",null,[n("code",null,"{ db: DatabaseQuery }")],-1))]),n("tr",null,[l[39]||(l[39]=n("td",null,"disableAttachmentExecution",-1)),n("td",null,[t(s,{type:"Boolean"})]),l[40]||(l[40]=n("td",null,"✅",-1)),l[41]||(l[41]=n("td",null,[n("code",null,"true")],-1)),l[42]||(l[42]=n("td",null,"Disable command execution by attachment",-1)),l[43]||(l[43]=n("td",null,[n("code",null,"false")],-1))])])])])])}const m=e(u,[["render",i]]),g=JSON.parse('{"path":"/docs/types.html","title":"Types","lang":"en-US","frontmatter":{"lang":"en-US","title":"Types"},"git":{"updatedTime":1744730135000,"contributors":[{"name":"wonderlandpark","username":"wonderlandpark","email":"wonderlandpark@outlook.kr","commits":1,"url":"https://github.com/wonderlandpark"}],"changelog":[{"hash":"4b1b8ba3d12501f4a7b77dac4bc177b4dc1e2833","time":1744730135000,"email":"wonderlandpark@outlook.kr","author":"wonderlandpark","message":"chore: migration via copliot"}]},"filePathRelative":"docs/types.md"}');export{m as comp,g as data};
